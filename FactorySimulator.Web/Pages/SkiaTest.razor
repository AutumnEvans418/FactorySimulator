@page "/"
@using GameEngine
@using GameEngine.SkiaSharp
@using SkiaSharp
@using SkiaSharp.Views.Blazor
@using System.Drawing

<SKGLView IgnorePixelScaling="true"
          EnableRenderLoop="true"
          OnPaintSurface="OnPaintSurface"
          oncontextmenu="return false" style="width:100%;height:500px" />

@code {


    public GameComponent[] Sprites { get; set; } = [
        new FpsSprite()
    ];

    private GameEventArgs? args;

    void OnPaintSurface(SKPaintGLSurfaceEventArgs e)
    {
        args ??= new GameEventArgs()
        {
            Canvas = new SkiaCanvas()
            {
                Canvas = e.Surface.Canvas,
            }
        };
        args.Width = e.Info.Size.Width;
        args.Height = e.Info.Size.Height;

        // the the canvas and properties
        var canvas = e.Surface.Canvas;

        // make sure the canvas is blank
        canvas.Clear(SKColors.White);


        var surfaceSize = e.Info.Size;

        foreach (var sprite in Sprites)
        {
            sprite.OnPaintBefore(args);
            sprite.OnPaint(args);
        }

        var clockSize = Math.Min(surfaceSize.Width, surfaceSize.Height) * 0.4f;
        var center = new SKPoint(surfaceSize.Width / 2f, surfaceSize.Height / 2f);
        var now = DateTime.Now;

        // draw the clock
        canvas.RotateDegrees(-90f, center.X, center.Y);

        using var paint = new SKPaint
        {
            IsAntialias = true,
            StrokeWidth = 5f,
            StrokeCap = SKStrokeCap.Round
        };
        // hours
        paint.StrokeWidth = 3f;
        canvas.Save();
        canvas.Translate(center);
        canvas.RotateDegrees(360f * (now.Hour / 12f));
        canvas.DrawLine(0, 0, clockSize * 0.4f, 0, paint);
        canvas.Restore();

        // minutes
        paint.StrokeWidth = 2f;
        canvas.Save();
        canvas.Translate(center);
        canvas.RotateDegrees(360f * (now.Minute / 60f));
        canvas.DrawLine(0, 0, clockSize * 0.6f, 0, paint);
        canvas.Restore();

        // seconds
        paint.StrokeWidth = 1f;
        canvas.Save();
        canvas.Translate(center);
        canvas.RotateDegrees(360f * ((now.Second * 1000f + now.Millisecond) / 1000f / 60f));
        canvas.DrawLine(0, 0, clockSize * 0.8f, 0, paint);
        canvas.Restore();

        // center
        canvas.DrawCircle(center, 10f, paint);

        // border
        paint.Style = SKPaintStyle.Stroke;
        canvas.DrawCircle(center, clockSize * 0.9f, paint);
    }


}
